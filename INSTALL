
Building MathyResurrected from source
====================================

Prerequisites:
--------------

	- Qt v4.6.0
		- http://qt.nokia.com/
		- IMPORTANT NOTE!!!!
		- plugin will build with any 4.x.x version of Qt but it will fail 
		  to load in Launchy unless it was built with exactly the same 
		  version of Qt that Launchy was built with. This means that you
		  absolutely must use Qt v4.6.0 for Launchy v2.5 and Qt must be 
		  compiled with Visual Studio 2005. Taken from Launchy BUILD.txt
		  you must use Qt's configure like this:
		  
			configure -opensource -no-webkit
		
		- to understand better this issue see:
			http://qt.nokia.com/doc/4.6/deployment-plugins.html
			http://qt.nokia.com/doc/4.6/plugins-howto.html
			(section: Loading and Verifying Plugins Dynamically)
		- You can find older versions of Qt on Qt's FTP server accessible 
		  from Qt site, in /src directory.
	
	- ANTLR C runtime v3.2 or higher (libantlr3c)
		- http://www.antlr.org/download/C
		
	- Boost v1.34 or higher
		- http://www.boost.org/
		
	- GNU Multiple precission library (gmp) or its Windows port mpir
	- GNU MPFR Library
	- MPC Library (http://www.multiprecision.org/index.php?prog=mpc)
	
Build process
-------------
	Before isuing build process, part of the source needs to be (re)generatd
using ANTLR: 

		$ cd PATH_TO_THE_SOURCE_TREE/src/antlr
		$ ./regenerate.sh
		
	After that, create empty directory outside of source tree and from it issue 
the following command:
	
		$ cmake PATH_TO_THE_SOURCE_TREE 
		
	Or, if you want to customize source congifuration:
	
		$ cmake -i PATH_TO_THE_SOURCE_TREE
		
	When CMake finishes its work:
	
		$ make
		$ sudo make install
		
	There is also option to use CMake GUI where it is available. Note that this 
is absolutelly not neccessary not required to build mathyresurrected. 

Visual Studio Solution (or any other IDE supported by CMake)
============================================================
	Project files needed for work in IDEs are generated automatically using 
CMake. See CMake docs, or atleast:

	$ cmake --help